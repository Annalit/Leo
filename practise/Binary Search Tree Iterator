/**
 * Definition for binary tree
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */

public class BSTIterator {
    private TreeNode cur;
    Stack<TreeNode> s= new Stack<TreeNode>(); 
    public BSTIterator(TreeNode root) {
        cur = root;
    }

    /** @return whether we have a next smallest number */
    public boolean hasNext() {
        return (cur!=null||!s.isEmpty());
    }

    /** @return the next smallest number */
    public int next() {
        int result = 0;
          while(cur!=null){
                s.push(cur);  
                cur = cur.left;
            } 
                cur = s.pop();
                result = cur.val;
                cur = cur.right;
        return result;
    }
}

/**
 * Your BSTIterator will be called like this:
 * BSTIterator i = new BSTIterator(root);
 * while (i.hasNext()) v[f()] = i.next();
 */
