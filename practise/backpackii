public class Solution {
    /**
     * @param m: An integer m denotes the size of a backpack
     * @param A & V: Given n items with size A[i] and value V[i]
     * @return: The maximum value
     */
    public int backPackII(int m, int[] A, int V[]) {
        // write your code here
        // define dp[i][j] the maximum value from first i get the backpack size j
        //dp[i][j] = Math.max(dp[i - 1][j], dp[i - 1][j - A[i]] + V[i] )
        int[][] dp = new int[A.length][m + 1];
        for (int i = 0; i < m + 1; i++) {
            if (A[0] <= i) {
                dp[0][i] = V[0];
            } else {
                dp[0][i] = 0;
            }
        }
        int max = -1;
        for (int i = 1; i < A.length; i++) {
            for (int j = 1; j < m + 1; j++) {
                if (j >= A[i])
                    dp[i][j] = Math.max(dp[i - 1][j], dp[i - 1][j - A[i]] + V[i]);
                else 
                    dp[i][j] = dp[i - 1][j];
                max = Math.max(dp[i][j], max);
            }
        }
        return max;
    }
}
